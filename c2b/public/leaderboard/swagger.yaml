swagger: '2.0'
info:
  version: 0.5 - 2016-01-18
  title: HC Player ranking RESTFul web service.
  description: The HC Favorites App web service will return responses in the 200 range when the requests can be handled successfully by the backend system. An error in the 400 range will occur if the service or if the backend system detect a functional error. An error in the 500 range will mean that there is an infrastructural problem within the HC backend server landscape.
securityDefinitions:
  token:
    name: "Auth-Token"
    type: apiKey
    in: header
    description: "User token obtained from PlayTech"
paths:
  /tournaments:
    get:
      tags:
        - tournaments
      summary: Get list of available tournaments
      description: 'Returns list of tournaments for which the end date is not reached yet, or all tournaments when the optional "archived" parameter is set to "true"'
      operationId: GetTournaments
      produces:
        - application/json
      parameters:
        - in: query
          name: archived
          description: 'When "true": also show tournaments from the past (end_date < today())'
          required: false
          type: boolean
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/tournaments'
        '400':
          description: Bad request content
        '404':
          description: No tournaments found
  '/tournaments/{tournament_code}/ranking':
    get:
      tags:
        - ranking
      summary: Get leaderboard of players of a specific tournament by tournament code. The default settings are the complete list of players. The position of a specific player in the tournament can be found by specifying the username of the player in the query. Sending token and casino in the header is only necessary when sending a username in the query.
      description: Returns an array of players with points and position in the specified tournament.
      operationId: GetLeaderboardForTournamentCode
      produces:
        - application/json
      security:
        - token: []
      parameters:
        - in: path
          name: tournament_code
          description: Tournament code to get ranking of
          required: true
          type: integer
        - in: query
          name: min_offset
          description: 'Start offset (inclusive), when a part of the list is wanted. The default start offset is 0.'
          required: false
          type: integer
        - in: query
          name: max_offset
          description: 'End offset (exclusive). Example: when the start offset is 0 and the end offset is 15, then the records 0-14 are returned.'
          required: false
          type: integer
        - in: query
          name: player
          description: User name of a player
          required: true
          type: string
        - in: header
          name: "Auth-Casino-Id"
          description: Unique id of the casino the player is logged in to.
          required: true
          type: string
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/tournaments'
        '400':
          description: Bad request content
        '403':
          description: Forbidden - Token is not valid.
        '404':
          description: Tournament or ranking not found
definitions:
  tournaments:
    type: array
    items:
      required:
        - tournament_code
      properties:
        tournament_code:
          type: integer
          description: Tournament code
        tournament_name:
          type: string
          description: Name of the tournament
        start_date:
          type: string
          format: date
          description: Start date of the tournament
        end_date:
          type: string
          format: date
          description: End date of the tournament
        ranking:
          type: array
          description: Ranking of the tournament
          minItems: 0
          items:
            required:
              - player
              - points
              - position
            properties:
              player:
                type: string
                description: "The player's name"
              points:
                type: string
                description: "The player's score"
              position:
                type: integer
                description: "The player's position in the ranking"
