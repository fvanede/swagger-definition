# Holland Casino REST JSON API for Favorites App
#
swagger: '2.0'

# This is your document metadata
info:
  version: "0.1.0"
  title: HC Favorites App web service

# Describe your paths here
paths:
  /users:
    post:
      tags:
        - users
      summary: Register / Login
      description: Register a new user and/or login an existing user
      operationId: registerUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: credentials
          description: User object that needs to be added to the backend CRM system
          required: true
          schema:
            $ref: "#/definitions/credentials"
      responses:
        "200":
          description: Successful operation - user is known and returned (no need to create again)
          schema:
            $ref: "#/definitions/user_reference"
        "201":
          description: User created
          schema:
            $ref: "#/definitions/user_reference"
        "404":
          description: Not found
          schema:
            $ref: "#/definitions/messages"          
        "405":
          description: Invalid input  
          schema:
            $ref: "#/definitions/messages"
  # This is a path endpoint. Change it.
  /users/{app_id}:
    # This is a HTTP operation
    get:
      tags:
        - users
      summary: Get user's account data
      description: Returns loyalty data and other account information of the user with ID {app_id}
      operationId: getUserByAppId
      produces:
        - application/json
      parameters:
        - in: path
          name: app_id
          description: App ID of user that needs to be fetched
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: "#/definitions/user"
        "400":
          description: Bad request content
        "404":
          description: User not found
  /preferences:
    # This is a HTTP operation
    get:
      tags:
        - preferences
      summary: Get all preference key/value pairs
      description: Get all possible preference key/value pairs, sorted by category and sub category
      operationId: getAllPreferences
      produces:
        - application/json
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: "#/definitions/categories"
        "400":
          description: Bad request
  /preferences/{app_id}:
    # This is a HTTP operation
    get:
      tags:
        - preferences
      summary: Get user preferences
      description: Retrieves account preferences of the the user with {app_id}
      operationId: getUserPreferencesByAppId
      produces:
        - application/json
      parameters:
        - in: path
          name: app_id
          description: App ID of user that needs to be fetched
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: "#/definitions/user_preferences"
        "400":
          description: Bad request content
        "404":
          description: User not found
  /jackpots:
    # This is a HTTP operation
    get:
      tags:
        - jackpots
      summary: Retrieve all JackPot values
      description: Returns the Jackpot values of all HC locations
      operationId: getJackPots
      produces:
        - application/json
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: "#/definitions/jackpots"
        "400":
          description: Bad request content
  /jackpots/{site_code}:
    # This is a HTTP operation
    get:
      tags:
        - jackpots
      summary: Retrieve location JackPot values
      description: Returns the JackPot value from the casino with site code {site_code}. Site code is a code to identify an HC location.  
      operationId: getJackpotBySiteCode
      produces:
        - application/json
      parameters:
        - in: path
          name: site_code
          description: Site code of the casino 
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: "#/definitions/jackpots"
        "400":
          description: Bad request content
        "404":
          description: Site code not found
  /campaigns/{app_id}:
    # This is a HTTP operation
    get:
      tags:
        - campaigns
      summary: Get campaigns for user
      description: Retrieve marketing campaigns that apply to user with ID {app_id}
      operationId: getCampaignsByAppId
      produces:
        - application/json
      parameters:
        - in: path
          name: app_id
          description: App ID of the user
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: "#/definitions/campaigns"
        "400":
          description: Bad request content
        "404":
          description: User not found
definitions:
  credentials:
    properties:
      app_id:
        type: string
        description: Unique ID representing a specific Favorites App user
      pers_id:
        type: string
        description: When the user is registered as card holder in the HC CRM system, this ID is known. If pers_id is not known, the user is a prospect to become a Favorites Card user.
      guest:
        $ref: "#/definitions/guest"
  guest:
    required:
      - birth_date
      - email_address
      - email_opt_in
    properties:
      initials:
        type: string
        description: Initials of the user
      surname_prefix:
        type: string
        description: Holds the user's preposition if applicable (e.g. van, van der, von, de, 't, van 't)
      surname:
        type: string
        description: The user's family name or last name
      birth_date:
        type: string
        format: date
        description: The user's date of birth
      gender:
        type: string
        enum: 
          - Male
          - Female
        description: The user's gender 
      email_address:
        type: string
        description: The user's preferred E-mail address
      email_opt_in:
        type: boolean
        description: The user can accept e-mails from HC (true) or decline mails (false)
  user:
    properties:
      user_reference:
        $ref: "#/definitions/user_reference"
      pers_id:
        type: string
        description: When the user is registered as card holder in the HC CRM system, this ID is known. If pers_id is not known, the user is a prospect to become a Favorites Card user.        
      guest:
        $ref: "#/definitions/guest"
      card:
        $ref: "#/definitions/card"
      loyalty:
          $ref: "#/definitions/loyalty"
  user_reference:
    required:
      - app_id
      - is_promotable
    properties:
      app_id:
        type: string
        description: Unique ID representing a specific Favorites App user
      is_promotable:
        type: boolean
        description: Indicates if the user may visit a HC location or is on the blacklist (banned temporarily or permanent)
  card:
    required:
      - card_nr
      - expiry_date
    properties:
      card_nr:
        type: string
        description: The ID of the Favorites Card
      loyalty_account_nr:
        type: string 
        description: Loyalty account number of the card user
      expiry_date:
        type: string
        format: date
        description: The expiry date of the Favorites Card 
      type:
        type: string
        description: Description of the type of card
  messages:
    properties:
      message: 
        type: array
        items:
          type: string 
  loyalty:
    required:
      - account_nr
      - points
      - current_segment 
    properties:
      account_nr:
        type: integer
        format: int64
      points:
        type: integer
        format: int64
      current_segment:
        properties:
          code:
            type: integer
            format: int32
            description: The code of the user's current loyalty segment
          value:
            type: string
            description: Description of the users's current loyalty segment (e.g. Black Favorites Card)
      next_segment:
        properties:
          code:
            type: integer
            format: int32
            description: The code of the next loyalty segment the user can reach
          value:
            type: string
            description: Description of loyalty segment the user can reach
          remaining_visits:
            type: integer
            format: int32
            description: The number of visits the user needs to reach the next loyalty segment
          remaining_visits_expiry_date:
            type: string
            format: date
            description: Remaining visits need to be done before expiry date
  user_preferences:
    properties:
      user_reference:
        $ref: "#/definitions/user_reference"
      categories:
        $ref: "#/definitions/categories"
  categories:
    type: array
    items:
      $ref: "#/definitions/category"
      description: A list of of objects of a preference category. Examples of Categories are for instance Game, Entertainment and Locations.
  category:
    properties:
      name:
        type: string
        description: The name of the category
      sub_categories:
        type: array
        items:
          $ref: "#/definitions/sub_category"
        description: A list of of objects of a preference sub category. Examples of sub_categories for the category "Game" are for instance "Tablegame" and "Slotmachine"]. If a category does not have sub categories, the name of the sub category is the same as the name of the category.
  sub_category:
    properties:
      name:
        type: string
        description: The name of the sub category
      preferences:
        type: array
        items:
          $ref: "#/definitions/preference"  
  preference:
    required:
      - key
      - value
    properties:
      key: 
        type: string
        description: Property key
      value:
        type: string
        description: Property value
    description: A key/value pair describing a user preference
  jackpots:
    type: array
    items:
      $ref: "#/definitions/jackpot"
    description: List of Jackpot objects, each holding a location and Jackpot value
  jackpot:
    required:
      - location
      - value
    properties:
      location:
        type: string
      value:
        type: integer
        format: int64
  campaigns:
    properties:
      user_reference:
        $ref: "#/definitions/user_reference"
      campaigns:
        type: array
        items:
          $ref: "#/definitions/campaign"
  campaign:
    required:
      - code
      - name
      - end_date
    properties:
      code:
        type: string
        description: Internal code of the marketing campaign
      name:
        type: string
        description: Description of the marketing campaign
      description:
        type: string
        description: Textual description of the marketing campaign
      image_type:
        type: string
        description: Reference to a picture that could be shown to the user
      start_date:
        type: string
        format: date
        description: Start date of the campaign
      end_date:
        type: string
        format: date
        description: End date of the campaign
